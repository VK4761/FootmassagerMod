// Define pins for motor driver and relay
const int relayPin = 19;  // Relay IN4
const int motorIn1 = 26;  // IN1
const int motorIn2 = 25;  // IN2
const int motorENA = 33;  // ENA (PWM)

// Define time intervals
const int totalTime = 10000; // Total run time in milliseconds
const int halfTime = totalTime / 2; // Time to reach 75% speed



// Define duty cycles corresponding to desired speeds
const int dutyCycle50 = 128;  // 50% of 255
const int dutyCycle75 = 192;  // 75% of 255
const int dutyCycle95 = 242;  // 95% of 255

// Define duration for each speed phase in milliseconds
const int duration = 10000;  // 10 seconds



/**
 * Sets the motor speed to a specified duty cycle for a given duration.
 *
 * @param dutyCycle The PWM duty cycle to set (0-255).
 * @param duration The duration to maintain this speed in milliseconds.
 */
void setMotorSpeed(int dutyCycle, int duration)
{
    ledcWrite(motorENA, dutyCycle);
    delay(duration);
}

/**
 * Sets up the GPIO pins
 */
void setup()
{
    // Configure pins as outputs
    pinMode(relayPin, OUTPUT);
    pinMode(motorIn1, OUTPUT);
    pinMode(motorIn2, OUTPUT);

    // Initialize motor and relay in the off state
    digitalWrite(relayPin, LOW);


    // Set motor direction (forward)
    digitalWrite(motorIn1, HIGH);
    digitalWrite(motorIn2, LOW);
        // Turn on the relay to supply power to the motor driver
    digitalWrite(relayPin, HIGH);


    // Attach PWM functionality to motorENA pin with specified frequency and resolution
    ledcAttach(motorENA, 25000, 8);  // 5 kHz frequency, 8-bit resolution
}

/**
 * Main loop to control the motor
 */
void loop()
{

    // Set motor speed to 50% for 10 seconds
    setMotorSpeed(dutyCycle50, duration);

    // Set motor speed to 75% for 10 seconds
    setMotorSpeed(dutyCycle75, duration);

    // Set motor speed to 95% for 10 seconds
    setMotorSpeed(dutyCycle95, duration);

    // Stop the motor by setting PWM duty cycle to 0
    setMotorSpeed(0, duration);

    // Wait for a while before restarting the cycle
    delay(2000);
}
